:Author: Alberth
:Version: 2022-09-09

.. contents::
   :depth: 3

####################
RCD data file format
####################

.. Section levels  # = ~ .

License
=======
This file is part of FreeRCT.
FreeRCT is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation, version 2.
FreeRCT is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
See the GNU General Public License for more details. You should have received a
copy of the GNU General Public License along with FreeRCT. If not, see
<http://www.gnu.org/licenses/>.

Introduction
============
FreeRCT is a game where you build roller-coasters in your theme park, hoping to
get lots of visitors paying for your investments. If you do it well, you might
get rich.

The program uses so-called RCD files, data files with a binary file format to
pack graphics and other game data, ready for use by the FreeRCT program. This
document describes the format, acting as an independent definition of the file
format.

Money
~~~~~
All money amounts in RCD files are signed integer numbers, expressing cents.

File header
~~~~~~~~~~~
Each data file starts with a file header indicating it is an RCD file.
Currently accepted file format version is 2. The format is as follows

======  ======  =======  ========================================================================
Offset  Length  Version  Description
======  ======  =======  ========================================================================
   0       4      1-     Magic string 'RCDF'.
   4       4      1-     Version number of the file format.
   8                     Total length.
======  ======  =======  ========================================================================

After the header, a sequence of blocks holds the (description about the) file content. The first
block gets number 1, the second block gets number 2, and so on. Each block can refer to its
predecessor blocks using the block numbers. A reference to block number 0 means that no data is
provided, for example to represent missing sprites.

To allow fast scanning of RCD files, the meta blocks (these blocks contain the file content
description) must all be at the start of the file. Behind the meta blocks is the actual file content
in the form of the data blocks and game blocks. , the meta blocks that describe the overall file
content After the meta blocks comes the file content itself, in data blocks.

RCD data file version 2 requires the INFO meta block.

Version history
...............

- 1 (20110915) Initial version.
- 2 (20140329) Added meta blocks and the INFO block requirement.


Meta blocks
===========
Meta blocks provide information about what is inside the RCD file. Version 2 of the RCDF file format
requires the presence of an INFO block as first block in the file.

File information
~~~~~~~~~~~~~~~~
The INFO block has the following data. The FreeRCT program can read version 1.

======  ======  =======  ===========  ==================================================================
Offset  Length  Version  Name         Description
======  ======  =======  ===========  ==================================================================
   0       4      1-                  Magic string 'INFO'.
   4       4      1-                  Version number of the block.
   8       4      1-                  Length of the block excluding magic string, version, and length.
  12    1- 16     1-     build        Build number of the file data.
  24    1- 64     1-     name         Name of the file data (a few words, nul-terminated, max 64 bytes).
   ?    1-128     1-     uri          URI for locating the resource (nul-terminated, max 128 bytes).
   ?    1-128     1-     website      URL for more information (nul-terminated, max 128 bytes).
   ?    1-512     1-     description  Description (nul-terminated, max 512 bytes).
======  ======  =======  ===========  ==================================================================

Creating the content of an RCD file is typically a lot of work, taking a long time to make.
The INFO block aims to provide human-readable information about that work, as well as providing
hooks for identifying different versions of the same work (taking version compatibility into
account) for a computer.

The *name* field is a name-like description of the work, typically one or two words. The
*description* can be a more elaborate text, describing features, people that helped making it, and
so on. The *info* field can be used to point to a site or forum for more information about the work.
The *build* field (generated by rcdgen) is a minor version number. It is highly recommended to make
it unique each time you create the file. Its use is to differentiate between older and newer builds
of the same work (as well as recognizing precisely equal files).

The *uri* field is the technical identification for the work. A recommended form is

        some.domain.name/one-word-name/major-version

The idea of this string is that it uniquely identifies the same work in its major version. Two files
with the same *uri* are compatible. The ``some.domain.name`` does not need to point to an existing
domain name, although it is useful if you can. The ``major-version`` part functions as a
compatibility breaker. Changing this means you change the string, thus making it incompatible
with previous versions of the work.
Finally, the ``one-word-name`` can be longer, by adding more ``/`` separators, just like normal
URLs, for example to indicate the work is a part of something larger.


Version history
...............

- 1 (20110915) Initial version.



Data blocks
===========
After the file header come the various data blocks.
The goal of data blocks is to provide blobs of information that are somewhat independent.
The data blocks are referenced by game blocks by their ID. The first data block
gets number 1, the second block number 2, etc.

A reference to data block 0 means 'not present'.


8bpp sprites
~~~~~~~~~~~~
A data block containing the actual image of a sprite (in 8bpp), and its
offset. Version 2 is supported by FreeRCT.

======  ======  =======  =================================================
Offset  Length  Version  Description
======  ======  =======  =================================================
   0       4      1-     Magic string '8PXL'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string,
                         version, and length.
  12       2      1-     Width of the image.
  14       2      1-     Height of the image, called 'h' below.
  16       2      2-     (signed) X-offset.
  18       2      2-     (signed) Y-offset.
  20     4*h      1-     Jump table to pixel data of each line. Offset is
                         relative to the first entry of the jump table.
                         Value 0 means there is no data for that line.
   ?       ?      1-     Pixels of each line.
   ?                     Variable length.
======  ======  =======  =================================================


Line data is a sequence of pixels with an offset. Its format is

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       1    Relative offset (0-127), bit 7 means 'last entry of the
                line'.
   1       1    Number of pixels that follow this count, called n (0-255).
   2       n    Pixels, 1 byte per pixel (as it is 8bpp).
   ?            Variable length.
======  ======  ==========================================================

The offset byte is relative to the end of the previous pixels, thus an offset
of 0 means no gap between the pixels. A count of 0 is useful if the gap at a
line is longer than 127 pixels.

To decide: Some simple form of compressing may be useful in the pixels as it
           decreases the amount of memory transfers.

Version history
...............

- 1 (20110915) Initial version.
- 2 (20120623) Moved the offset from the SPRT block into the 8PXL block.

32bpp sprites
~~~~~~~~~~~~~
Data block for an 32bpp sprite and its offset. Currently supported version is 1.

======  ======  =======  =================================================================
Offset  Length  Version  Description
======  ======  =======  =================================================================
   0       4      1-     Magic string '32PX'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  12       2      1-     Width of the image.
  14       2      1-     Height of the image.
  16       2      1-     (signed) X-offset.
  18       2      1-     (signed) Y-offset.
  20       ?      1-     Line data.
   ?                     Variable length.
======  ======  =======  =================================================================

Each horizontal line in the image starts with 2 bytes length to allow skipping the line quickly.
The length contains all pixel data of the line, as well as the 2 bytes length. The length of the
last line is 0.

The pixel data of a line is stored in a sequence of blocks of up to 63 pixels in a block.
There are four types of blocks:

1. Fully opaque 32bpp pixels (all the coloured pixels that are always the same).
2. Partially opaque 32bpp pixels (partially transparent).
3. Fully transparent pixels (empty space around the displayed shape to make it a rectangular image).
4. Recolour layer (pixels that are retrieved from a table like a palette).
   The table index acts as a kind of grey value to retrieve a different
   coloured pixel. Opacity is taken from the pixel block.

Encoding of each type of block:

1. Fully opaque 32bpp pixels (RGB).
   - 1 byte length (values 0-63)
   - N x 3 byte pixel colours (RGB).

2. Partially opaque 32bpp pixels (RGB).
   - 1 byte length (values 0-63) + 64
   - 1 byte amount of opacity (0-255, all pixels have the same opacity).
   - N x 3 byte pixel colours (RGB).

3. Fully transparent pixels.
   - 1 byte length (values 0-63) + 128

4. Recolour layer.
   - 1 byte length (values 0-63) + 64 + 128
   - 1 byte layer to apply (0-255).
   - 1 byte amount of opacity (0-255, all pixels have the same opacity).
   - N bytes table index for each pixel.

Each line ends with a zero-length fully opaque pixel block (that is, a single byte ``0``).

Version history
...............

- 1 (20131211) Initial version.


Texts
~~~~~
Text in various forms and shapes is very common. In particular, it needs to
support translations, and eventually run-time composition of text with respect
to genders, plurals, and cases.
The latter will be encoded in the text itself, and does not need to be handled
here (except perhaps for some simple translations).

What remains is a collection of names that are attached to text (the game
queries text by name), where the latter may exist in several languages. All
text is assumed to be UTF-8 encoded, and 0-terminated.

FreeRCT can read version 3 text blocks, which look like

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'TEXT'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       ?    First string.
   ?       ?    Second string.
  ...     ...
======  ======  ==========================================================

A string has the following structure.

======  ======  ============================================================================
Offset  Length  Description
======  ======  ============================================================================
   0       2    Length of the entire string, including these length bytes.
   2       1    Length of the identification name of the string (incl 0).
   3       ?    Identification name itself (0 terminated)
   ?       ?    First translation.
   ?       ?    Second translation.
  ...     ...
======  ======  ============================================================================

A translation has the following structure.

======  ======  ============================================================================
Offset  Length  Description
======  ======  ============================================================================
   0       2    Length of this translation (including these length bytes).
   2       1    Length of the language name (incl 0).
   3       ?    Language name itself (0 terminated).
   ?       1    Number of plural forms of this string in the indicated language.
   ?       ?    Text of the string's first plural form in this language (incl 0).
   ?       ?    Text of the string's second plural form in this language (incl 0).
  ...     ...
======  ======  ============================================================================

For non-pluralized strings, only the first plural form is written;
otherwise as many plural forms as the language has.

The languages use one of the following tags (currently ``name of language -
name of country area`` but that may change in the future).

======  ===================================
Tag     Description
======  ===================================
da_DK   Denmark.
de_DE   Germany.
en_GB   Great Britain (default).
en_US   United States.
es_ES   Spain.
nds_DE  Low German (Germany).
nl_NL   The Netherlands.
sv_SE   Sweden.
======  ===================================

If a string does not exist in the queried language, the program will fall back
to the ``en_GB`` language.

String parameters
~~~~~~~~~~~~~~~~~
A character sequence of the form "%...%" is an escape sequence. The following
sequences are recognized:

- "%%": The character "%".
- "%n%" with "n" a decimal number: Insert parameter 'n'.

Version history
...............

- 1 (20120714) Initial version.
- _ (20121215) Added string parameters.
- 2 (20131204) Dropped the default language, ``en_GB`` now has that role.
- 3 (20220821) Added plural forms.


Game blocks
===========
A game block is a piece of data that relates closely to a concept in the
game, like 'path' or 'roller coaster'. Normally it refers to one or more
data blocks.

Tile surface sprite sub-block
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In several game blocks you can find a set of sprite for the ground. Below is
the layout of such a sub-block.
Note that the sprites should look to the north (thus, the sprite at 4 has its
back corner up).

The suffix is added to denote a specific sprite in a sequence inside another block.

======  ======  =======  ======  ===========================================================================
Offset  Length  Version  Suffix  Description
======  ======  =======  ======  ===========================================================================
   0       4      1-     #       Flat surface tile.
   4       4      1-     #n      North corner up.
   8       4      1-     #e      East corner up.
  12       4      1-     #ne     North, east corners up.
  16       4      1-     #s      South corner up.
  20       4      1-     #ns     North, south corners up.
  24       4      1-     #es     East, south corners up.
  28       4      1-     #nes    North, east, south corners up.
  32       4      1-     #w      West corner up.
  36       4      1-     #nw     West, north corners up.
  40       4      1-     #ew     West, east corners up.
  44       4      1-     #new    West, north, east corners up.
  48       4      1-     #sw     West, south corners up.
  52       4      1-     #nsw    West, north, south corners up.
  56       4      1-     #esw    West, east, south corners up.
  60       4      1-     #Nb     Steep north slope (bottom part).
  64       4      1-     #Eb     Steep east slope  (bottom part).
  68       4      1-     #Sb     Steep south slope (bottom part).
  72       4      1-     #Wb     Steep west slope  (bottom part).
  76       4      2-     #Nt     Steep north slope (top part).
  80       4      2-     #Et     Steep east slope  (top part).
  84       4      2-     #St     Steep south slope (top part).
  88       4      2-     #Wt     Steep west slope  (top part).
  92                             Total length of the sub-block.
======  ======  =======  ======  ===========================================================================

Version history
...............

- 1 (20110915) Initial version.
- 2 (20130602) Steep slope sprites were split in a bottom and top part.


Ground tiles block
~~~~~~~~~~~~~~~~~~
A set of ground tiles that form a smooth surface. Current version in
FreeRCT is 6.

======  ======  =======  ===================================================================================
Offset  Length  Version  Description
======  ======  =======  ===================================================================================
   0       4      1-     Magic string 'SURF'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  12       2      2-     Type of ground.
  14       2      1-     Zoom-width of a tile of the surface.
  16       2      1-     Change in Z height (in pixels) when going up or down a tile level.
  --      76      1-3    Tile surface sprite sub-block for north viewing direction.
  18      92      4-     Tile surface sprite sub-block for north viewing direction.
  --      76      1-2    Tile surface sprite sub-block for east viewing direction.
  --      76      1-2    Tile surface sprite sub-block for south viewing direction.
  --      76      1-2    Tile surface sprite sub-block for west viewing direction.
 110                     Total length.
======  ======  =======  ===================================================================================

Known types of ground:

- Empty  (0), do not use in the RCD file.
- Grass  (16-19), green grass ground, with increasing length grass on it.
- Semi-transparent grass (20), for underground view.
- Sand   (32), desert 'ground'.
- Cursor (48), cursor test tiles. Internal use. Defines what part of a
  tile is selected. Colour 181 means 'north corner', 182 means 'east corner',
  184 means 'west corner', 185 means 'south corner', and 183 means 'entire
  tile'.
- Cursor edge (49), cursor test tiles. Internal use. Like the Cursor test
  tiles, but for edges instead of corners.

To do: Move the cursor tile to another position.

Version history
...............

- 1 (20110915) Initial version.
- 2 (20110918) Added ground type.
- 3 (20110925) Removed sprite blocks for viewing in east, south, and west direction.
-   (20111014) Added 'Cursor' tiles type.
- 4 (20130602) Steep slope sprites split in a bottom and top part.
- 5 (20140817) Add cursor edge test sprites.
- 6 (20150123) Added 'semi-transparent grass' type.


Tile selection
~~~~~~~~~~~~~~
A tile selection cursor. It is very similar to ground tiles, except there is
no type. FreeRCT can read blocks with version number 2.

======  ======  =======  ===================================================================================
Offset  Length  Version  Description
======  ======  =======  ===================================================================================
   0       4      1-     Magic string 'TSEL'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  12       2      1-     Zoom-width of a tile of the surface.
  14       2      1-     Change in Z height (in pixels) when going up or down a tile level.
  --      76      1-1    Tile surface sprite sub-block.
  16      92      2-     Tile surface sprite sub-block.
 108                     Total length.
======  ======  =======  ===================================================================================

Version history
...............

- 1 (20110925) Initial version.
- 2 (20130602) Longer surface sprite block due to splitting the steep slope sprites.


Tile area selection
~~~~~~~~~~~~~~~~~~~
Sprites to point out a (selection of) tile(s) to the user.
FreeRCT can read blocks with version 2.

======  ======  =======  ===================================================================================
Offset  Length  Version  Description
======  ======  =======  ===================================================================================
   0       4      1-     Magic string 'TARE'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  12       2      1-     zoom-width of a tile of the surface.
  14       2      1-     Change in Z height (in pixels) when going up or down a tile level.
  --      76      1-1     Tile surface sprite sub-block.
  16      92      2-     Tile surface sprite sub-block.
 108                     Total length.
======  ======  =======  ===================================================================================

Version history
...............

- 1 (20110925) Initial version.
- 2 (20130602) Longer surface sprite block due to splitting the steep slope sprites.


Patrol area selection
~~~~~~~~~~~~~~~~~~~~~

Tiles to display the patrol area of staff.
FreeRCT can read blocks with version 2.

======  ======  =======  ===================================================================================
Offset  Length  Version  Description
======  ======  =======  ===================================================================================
   0       4      1-     Magic string 'PARE'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  12       2      1-     Zoom-width of a tile of the surface.
  14       2      1-     Change in Z height (in pixels) when going up or down a tile level.
  --      76      1-1    Tile surface sprite sub-block.
  16      92      2-     Tile surface sprite sub-block.
 108                     Total length.
======  ======  =======  ===================================================================================

Version history
...............

- 1 (20110925) Initial version.
- 2 (20130602) Longer surface sprite block due to splitting the steep slope sprites.


Tile corner selection block
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Sprites for pointing to a single corner of a surface tile. Current version is 2.

======  ======  =======  ===================================================================================
Offset  Length  Version  Description
======  ======  =======  ===================================================================================
   0       4      1-     Magic string 'TCOR'
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  12       2      1-     Zoom-width of a tile of the surface.
  14       2      1-     Change in Z height (in pixels) when going up or down a tile level.
  --      76      1-1    Tile surface sprite sub-block for selected corner pointing north.
  16      92      2-     Tile surface sprite sub-block for selected corner pointing north.
  --      76      1-1    Tile surface sprite sub-block for selected corner pointing east.
 108      92      2-     Tile surface sprite sub-block for selected corner pointing east.
  --      76      1-1    Tile surface sprite sub-block for selected corner pointing south.
 200      92      2-     Tile surface sprite sub-block for selected corner pointing south.
  --      76      1-1    Tile surface sprite sub-block for selected corner pointing west.
 292      92      2-     Tile surface sprite sub-block for selected corner pointing west.
 384                     Total length.
======  ======  =======  ===================================================================================

Version history
...............

- 1 (20110925) Initial version.
- 2 (20130602) Longer surface sprite block due to splitting the steep slope sprites.


Shops/stalls
~~~~~~~~~~~~
One tile objects, selling useful things to guests. FreeRCT can read block version 7.

======  ======  =======  ===================================================================================
Offset  Length  Version  Description
======  ======  =======  ===================================================================================
   0       4      1-     Magic string 'SHOP'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string, version, and length.
  --       2      1-5    Zoom-width of a tile of the surface.
  --       2      1-3    Height of the shop in voxels.
  12       1      4-     Height of the shop in voxels.
  13       1      4-     Shop flags.
  --       4      1-5    Unrotated view (ne).
  --       4      1-5    View after 1 quarter negative rotation (se).
  --       4      1-5    View after 2 quarter negative rotations (sw).
  --       4      1-5    View after 3 quarter negative rotations (nw).
  14       4      6-     Image set (reference to an FSET block).
  18       4      2-     First recolouring specification.
  22       4      2-     Second recolouring specification.
  26       4      2-     Third recolouring specification.
  30       4      4-     Cost of the first item.
  34       4      4-     Cost of the second item.
  38       4      4-     Monthly cost of having the shop.
  42       4      4-     Additional monthly cost of having an opened shop.
  46       1      4-     Item type of the first item.
  47       1      4-     Item type of the second item.
  48       4      3-     Text of the shop (reference to a TEXT block).
  52       ?      7-     Characters of the ride's internal name, nul-terminated.
   ?       4      8-     Ride construction cost.
   ?                     Total length.
======  ======  =======  ===================================================================================

Shop flags:

- bit 0 Set if the shop has an entrance to the NE in the unrotated view.
- bit 1 Set if the shop has an entrance to the SE in the unrotated view.
- bit 2 Set if the shop has an entrance to the SW in the unrotated view.
- bit 3 Set if the shop has an entrance to the NW in the unrotated view.

Item types:

- Nothing (0)
- A drink (8)
- An ice-cream (9)
- Non-salty food (16)
- Salty food (24)
- Umbrella (32)
- Balloon (33) since version 5
- Map of the park (40)
- Souvenir (41) since version 5
- Money (ATM) (48) since version 5
- Toilet (49) since version 5
- First aid (50) since version 5

Version history
...............

- 1 (20110925) Initial version.
- 2 (20120708) Added recolouring information.
- 3 (20120714) Added a TEXT block reference for the shop texts.
- 4 (20121005) Added items to sell, and costs to pay.
- 5 (20141010) Added more items.
- 6 (20210131) Use an FSET block instead of saving the sprites directly.
- 7 (20220829) Added internal name.
- 6 (20220909) Added ride construction cost.


Frame Sets
~~~~~~~~~~
A set of sprites for an object (e.g. a ride) that occupies (x*y) tiles. FreeRCT can read block version 1.

===============  =======  =======  =================================================================
Offset           Length   Version  Description
===============  =======  =======  =================================================================
   0              4        1-      Magic string 'FSET'.
   4              4        1-      Version number of the block.
   8              4        1-      Length of the block excluding magic string, version, and length.
  12              2        1-      Zoom-width of a tile of the surface.
  14              1        1-      Number x of tiles in x direction.
  15              1        1-      Number y of tiles in y direction.
  16              4*x*y    1-      Unrotated views (ne), for each tile.
  16+4*x*y        4*x*y    1-      Views after 1 quarter negative rotation (se).
  16+8*x*y        4*x*y    1-      Views after 2 quarter negative rotations (sw).
  16+12*x*y       4*x*y    1-      Views after 3 quarter negative rotations (nw).
  16+16*x*y                        Total length.
===============  =======  =======  =================================================================

A view consists of a sprite block reference for each tile of the object,
with x as the minor index and y as the major index.

Version history
...............

- 1 (20210131) Initial version.


Timed animations
~~~~~~~~~~~~~~~~
An animation, consisting of a sequence of f frame sets and a duration for each frame. FreeRCT can read block version 1.

===========  =======  =======  ==================================================================
Offset       Length   Version  Description
===========  =======  =======  ==================================================================
   0          4        1-      Magic string 'TIMA'.
   4          4        1-      Version number of the block.
   8          4        1-      Length of the block excluding magic string, version, and length.
  12          4        1-      Number f of frames in the block.
  16          4*f      1-      Duration of each frame in milliseconds.
  16+4*f      4*f      1-      Reference to an FSET block, for each frame.
  16+8*f                       Total length.
===========  =======  =======  ==================================================================

Version history
...............

- 1 (20210131) Initial version.


Rides entrances and exits
~~~~~~~~~~~~~~~~~~~~~~~~~
An entrance or exit for a ride. FreeRCT can read block version 2.

===========  =======  =======  ==================================================================
Offset       Length   Version  Description
===========  =======  =======  ==================================================================
   0          4        1-      Magic string 'RIEE'.
   4          4        1-      Version number of the block.
   8          4        1-      Length of the block excluding magic string, version, and length.
  12          1        1-      Magic number 1 for entrances or 0 for exits.
  13          4        1-      Strings of the entrance/exit type (reference to a TEXT block).
  17          2        1-      Zoom-width of a tile of the surface.
  19          4        1-      Unrotated (ne) image, background sprite.
  23          4        1-      ne image, foreground sprite.
  27          4        1-      se image, background.
  31          4        1-      se image, foreground.
  35          4        1-      sw image, background.
  39          4        1-      sw image, foreground.
  43          4        1-      nw image, background.
  47          4        1-      nw image, foreground.
  51          4        1-      First recolouring specification.
  55          4        1-      Second recolouring specification.
  59          4        1-      Third recolouring specification.
  63          ?        2-      Characters of the type's internal name, nul-terminated.
   ?                           Total length.
===========  =======  =======  ==================================================================

Version history
...............

- 1 (20210206) Initial version.
- 2 (20220829) Added internal name.


Gentle and thrill rides
~~~~~~~~~~~~~~~~~~~~~~~
Gentle and thrill rides consisting of a single building. FreeRCT can read block version 5.

=========  ======  =======  ========================================================================================
Offset     Length  Version  Description
=========  ======  =======  ========================================================================================
   0        4       1-      Magic string 'FGTR'.
   4        4       1-      Version number of the block.
   8        4       1-      Length of the block excluding magic string, version, and length.
  12        1       1-      Magic number 1 for thrill rides or 0 for gentle rides.
  13        1       1-      Length of the ride in x direction in voxels.
  14        1       1-      Length of the ride in y direction in voxels.
  15        s       1-      Heights of the ride in voxels, for each tile occupied by the ride. The number s of
                            height bytes is equal to the product of the ride lengths in x and y direction.
  15+s      4       1-      Idle animation (reference to an FSET block).
  19+s      4       1-      Starting animation (reference to a TIMA block).
  23+s      4       1-      Working animation (reference to a TIMA block).
  27+s      4       1-      Stopping animation (reference to a TIMA block).
  31+s      4       1-      Unrotated (ne) preview.
  35+s      4       1-      se preview.
  39+s      4       1-      sw preview.
  43+s      4       1-      nw preview.
  47+s      4       1-      First recolouring specification.
  51+s      4       1-      Second recolouring specification.
  55+s      4       1-      Third recolouring specification.
  59+s      4       1-      Entrance fee.
  63+s      4       1-      Monthly cost of having the ride.
  67+s      4       1-      Additional monthly cost of having an opened ride.
  71+s      4       2-      Number of guest batches that can use the ride at the same time.
  75+s      4       2-      Maximum number of guests in each guest batch.
  79+s      4       2-      Duration of the ride's idle phase in milliseconds.
  83+s      4       2-      Total duration of the ride's working phase per working cycle in milliseconds.
  87+s      2       3-      Mimimum number of cycles (must be at least 1).
  89+s      2       3-      Maximum number of cycles (must be at least the minimum number).
  91+s      2       3-      Default number of cycles (must be at least the minimum and at most the maximum number).
  93+s      2       3-      Maximum reliability (in range 0..10000).
  95+s      2       3-      Daily reliability decrease (in range 0..10000).
  97+s      2       3-      Monthly decrease of the maximum reliability (in range 0..10000).
  99+s      4       4-      Intensity rating in percent.
 103+s      4       4-      Nausea rating in percent.
 107+s      4       4-      Base excitement rating in percent.
 111+s      4       4-      Absolute excitement rating increase per working cycle (must be >= 0).
 115+s      4       4-      Absolute excitement rating increase per nearby scenery item (must be >= 0).
 119+s      4       1-      Text of the ride (reference to a TEXT block).
 123+s      ?       5-      Characters of the ride's internal name, nul-terminated.
    ?       4       6-      Ride construction cost.
    ?                       Total length.
=========  ======  =======  ========================================================================================

The duration of the ride's working phase needs to be at least as long as the sum of the durations of all
frames of the starting, working and stopping animations. If the working phase is longer than that, the
working animation will be played in a loop to ensure the animation durations match.
If the working animation has a total length of zero, the idle image will be used instead.

The number of guest batches and the number of guests per batch must both be at least 1. If the number of
guest batches is greater than 1, the duration of the starting, working and stopping animations must be zero.

Every ride instance has an actual reliability and a maximum reliability. Initially both values are equal
to the ride type's maximum reliability. The actual reliability decreases daily by the daily reliability
decrease factor. The maximum reliability decreases monthly by the monthly maximum reliability decrease
factor. The actual reliability determines how likely the ride is to break down (lower values indicating
a higher risk). When a mechanic repairs or inspects the ride, its actual reliability is reset to its
current maximum reliability. The maximum reliability is never reset.


Version history
...............

- 1 (20210126) Initial version.
- 2 (20210201) Added timing of phases and ride capacity.
- 3 (20210227) Added minimum and maximum number of working cycles and reliability parameters.
- 4 (20210317) Added excitement, intensity, nausea parameters.
- 5 (20220829) Added internal name.
- 6 (20220909) Added ride construction cost.


Scenery items
~~~~~~~~~~~~~
A scenery item, such as trees or flower beds. FreeRCT can read block version 3.

===============  =======  =======  =========================================================================================================
Offset           Length   Version  Description
===============  =======  =======  =========================================================================================================
   0              4        1-      Magic string 'SCNY'.
   4              4        1-      Version number of the block.
   8              4        1-      Length of the block excluding magic string, version, and length.
  12              1        1-      Length of the item in x direction in voxels.
  13              1        1-      Length of the item in y direction in voxels.
  14              s        1-      Heights of the item in voxels, for each tile occupied by the item. The number s of
                                   height bytes is equal to the product of the item lengths in x and y direction.
  14+s            4        1-      How often the item needs to be watered by a handyman, in milliseconds (0 means it needs no watering).
  18+s            4        2-      The item may not be watered more often than once in this many milliseconds.
  22+s            4        1-      Normal animation (reference to a TIMA block).
  26+s            4        1-      Dry animation (reference to a TIMA block).
  30+s            4        1-      Unrotated (ne) preview.
  34+s            4        1-      se preview.
  38+s            4        1-      sw preview.
  42+s            4        1-      nw preview.
  46+s            4        1-      Cost for buying this item (should be positive).
  50+s            4        1-      Cost or return for selling this item (positive for a fee, negative if the player gets money back).
  54+s            4        1-      Cost or return for selling this item when dry.
  58+s            1        1-      Whether this item is considered symmetric (1 for true, 0 for false). Symmetric items can't be rotated.
  59+s            1        1-      Item type category.
  60+s            4        1-      Text of the item (reference to a TEXT block).
  64+s            ?        3-      Characters of the item's internal name, nul-terminated.
    ?                              Total length.
===============  =======  =======  =========================================================================================================

Valid scenery categories are:

- 0: Scenario item (can not be built or removed by the player).
- 1: Trees.
- 2: Flowerbeds.
- 3: Fountains.

Version history
...............

- 1 (20210320) Initial version.
- 2 (20210427) Added minimum watering interval.
- 3 (20220829) Added internal name.


Build direction arrows
~~~~~~~~~~~~~~~~~~~~~~
Arrows to point out direction of constructing new game elements. FreeRCT can
read blocks with version 1.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'BDIR'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       2    Zoom-width of a tile of the surface.
  14       4    Arrow pointing to NE edge.
  18       4    Arrow pointing to SE edge.
  22       4    Arrow pointing to SW edge.
  26       4    Arrow pointing to NW edge.
  30            Total length.
======  ======  ==========================================================

Version history
...............

- 1 (20110925) Initial version.


Foundations block
~~~~~~~~~~~~~~~~~
Vertical foundations to close gaps in the smooth surface. FreeRCT can read
blocks with version 1.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'FUND'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       2    Type of foundation.
  14       2    Zoom-width of a tile.
  16       2    Change in Z height of the tiles.
  18       4    Vertical south-east foundation, east  visible, south down.
  22       4    Vertical south-east foundation, east  down,    south visible.
  26       4    Vertical south-east foundation, east  visible, south visible.
  30       4    Vertical south-west foundation, south visible, west down.
  34       4    Vertical south-west foundation, south down,    west visible.
  38       4    Vertical south-west foundation, south visible, west visible.
  42            Total length.
======  ======  ==========================================================

The semantics of 'visible' is that the foundation is visible for the entire
height of the foundation. The term 'up' means that just the point at the top is
used, and 'down' means the point at the bottom is used.

Note that the sprite-sheet also has 4 'up' sprites, but they are currently not
used.


Known types of foundation:

- Empty (0) Reserved, do not use in the RCD file.
- Ground (16)
- Wood (32)
- Brick (48)

The tile width and z-height are used to ensure the foundations match with the
surface tiles.

Version history
...............

- 1 (20110918) Initial version.
-   (20121207) Replaced sprites.


Fences
~~~~~~
Fences are used to separate tiles from each other. They also have a decorative function.
FreeRCT can load ``FENC`` blocks with version 2.

======  ======  =======  ======  =====================================================================
Offset  Length  Version  Name    Description
======  ======  =======  ======  =====================================================================
   0       4      1-             Magic string 'FENC'.
   4       4      1-             Version number of the block.
   8       4      1-             Length of the block excluding magic string, version, and length.
  12       2      1-     width   Zoom-width of a tile.
  14       2      1-     type    Fence type.
  16       4      1-     ne_hor  Horizontal fence graphics of the north-east edge.
  20       4      1-     ne_n    Fence graphics of the north-east edge, north side raised.
  24       4      1-     ne_e    Fence graphics of the north-east edge, east side raised.
  28       4      1-     se_hor  Horizontal fence graphics of the south-east edge.
  32       4      1-     se_e    Fence graphics of the south-east edge, east side raised.
  36       4      1-     se_s    Fence graphics of the south-east edge, south side raised.
  40       4      1-     sw_hor  Horizontal fence graphics of the south-west edge.
  44       4      1-     sw_s    Fence graphics of the south-west edge, south side raised.
  48       4      1-     sw_w    Fence graphics of the south-west edge, west side raised.
  52       4      1-     nw_hor  Horizontal fence graphics of the north-west edge.
  56       4      1-     nw_w    Fence graphics of the north-west edge, west side raised.
  60       4      1-     nw_n    Fence graphics of the north-west edge, north side raised.
  64                             Total length.
======  ======  =======  ======  =====================================================================

The following fence types exist:

- Empty fence (0), do not use.
- Park fence (1).
- Wooden fence (2).
- Conifer hedge (3).
- Brick wall (4).

(The high byte of the fence type is always ``0``.)

Version history
...............

- 1 (20140101) Initial version.
- 2 (20140104) Swapped ``sw_s`` with ``sw_w`` and ``nw_w`` with ``nw_n``, added other types of fences.


Path block
~~~~~~~~~~
Path coverage is a set of at most 47 flat images. Paths can connect to
neighbouring tiles through four edges, optionally also covering the corner
between two connecting edges.

Starting at offset 18 are the sprite block numbers of each sprite. As normal,
use 0 to denote absence of a sprite. Two letter words in the description
denote an edge connects, one letter words denote the corner is covered.

Besides the maximal 47 flat sprites there are also 4 sprites with one edge
raised. FreeRCT can read path blocks with version 3.

Available path surface types:

- Empty (0) Reserved, do not use in the RCD file.
- Wood (4)
- Tiled (8)
- Asphalt (12)
- Concrete (16)

Add 0x8000 (32768) to the surface type to indicate the path should be used for queueing.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'PATH'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and length.
  12       2    Type of path surface.
  14       2    Zoom-width of a tile.
  16       2    Change in Z height of the tiles.
  18       4    Path without connections to other path tiles.
  22       4    NE.
  26       4    SE.
  30       4    NE, SE.
  34       4    NE, SE, E.
  38       4    SW.
  42       4    NE, SW.
  46       4    SE, SW.
  50       4    SE, SW, S.
  54       4    NE, SE, SW.
  58       4    NE, SE, SW, E.
  62       4    NE, SE, SW, S.
  66       4    NE, SE, SW, E, S.
  70       4    NW.
  74       4    NE, NW.
  78       4    NE, NW, N.
  82       4    NW, SE.
  86       4    NE, NW, SE.
  90       4    NE, NW, SE, N.
  94       4    NE, NW, SE, E.
  98       4    NE, NW, SE, N, E.
 102       4    NW, SW.
 106       4    NW, SW, W.
 110       4    NE, NW, SW.
 114       4    NE, NW, SW, N.
 118       4    NE, NW, SW, W.
 122       4    NE, NW, SW, N, W.
 126       4    NW, SE, SW.
 130       4    NW, SE, SW, S.
 134       4    NW, SE, SW, W.
 138       4    NW, SE, SW, S, W.
 142       4    NE, NW, SE, SW.
 146       4    NE, NW, SE, SW, N.
 150       4    NE, NW, SE, SW, E.
 154       4    NE, NW, SE, SW, N, E.
 158       4    NE, NW, SE, SW, S.
 162       4    NE, NW, SE, SW, N, S.
 166       4    NE, NW, SE, SW, E, S.
 170       4    NE, NW, SE, SW, N, E, S.
 174       4    NE, NW, SE, SW, W.
 178       4    NE, NW, SE, SW, N, W.
 182       4    NE, NW, SE, SW, E, W.
 186       4    NE, NW, SE, SW, N, E, W.
 190       4    NE, NW, SE, SW, S, W.
 194       4    NE, NW, SE, SW, N, S, W.
 198       4    NE, NW, SE, SW, E, S, W.
 202       4    NE, NW, SE, SW, N, E, S, W.
 206       4    NE edge up.
 210       4    NW edge up.
 214       4    SE edge up.
 218       4    SW edge up.
 222            Length of one view direction.
======  ======  ==========================================================

Version history
...............

- 1 (20110925) Initial version.
- 2 (20110930) Added tile width and z-height fields.
- 3 (20140526) Added wood, tiled, and asphalt surface types, and 0x8000 queue bit.


Path decoration
~~~~~~~~~~~~~~~
Path decorations are the benches, lamp posts, and litter bins at the path. It
also includes litter for the path, as well as vomit. FreeRCT can read version 1
path decoration blocks.

The purpose of different litter types is to have a few different litter
graphics to get a little variation in appearance.

======  ======  =======  =================================================
Offset  Length  Version  Description
======  ======  =======  =================================================
   0       4      1-     Magic string 'PDEC'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string,
                         version, and length.
  12       2      1-     Tile width.
  14       4      1-     Litter bin north east.
  18       4      1-     Litter bin south east.
  22       4      1-     Litter bin south west.
  26       4      1-     Litter bin north west.
  30       4      1-     Overflowing litter bin north east.
  34       4      1-     Overflowing litter bin south east.
  38       4      1-     Overflowing litter bin south west.
  42       4      1-     Overflowing litter bin north west.
  46       4      1-     Demolished litter bin north east.
  50       4      1-     Demolished litter bin south east.
  54       4      1-     Demolished litter bin south west.
  58       4      1-     Demolished litter bin north west.
  62       4      1-     Lamp post north east.
  66       4      1-     Lamp post south east.
  70       4      1-     Lamp post south west.
  74       4      1-     Lamp post north west.
  78       4      1-     Demolished lamp post north east.
  82       4      1-     Demolished lamp post south east.
  86       4      1-     Demolished lamp post south west.
  90       4      1-     Demolished lamp post north west.
  94       4      1-     Bench north east.
  98       4      1-     Bench south east.
 102       4      1-     Bench south west.
 106       4      1-     Bench north west.
 110       4      1-     Demolished bench north east.
 114       4      1-     Demolished bench south east.
 118       4      1-     Demolished bench south west.
 122       4      1-     Demolished bench north west.
 126       4      1-     Litter at flat path, type 1.
 130       4      1-     Litter at flat path, type 2.
 134       4      1-     Litter at flat path, type 3.
 138       4      1-     Litter at flat path, type 4.
 142       4      1-     Litter at ramp with NE edge up, type 1.
 146       4      1-     Litter at ramp with NE edge up, type 2.
 150       4      1-     Litter at ramp with NE edge up, type 3.
 154       4      1-     Litter at ramp with NE edge up, type 4.
 158       4      1-     Litter at ramp with SE edge up, type 1.
 162       4      1-     Litter at ramp with SE edge up, type 2.
 166       4      1-     Litter at ramp with SE edge up, type 3.
 170       4      1-     Litter at ramp with SE edge up, type 4.
 174       4      1-     Litter at ramp with SW edge up, type 1.
 178       4      1-     Litter at ramp with SW edge up, type 2.
 182       4      1-     Litter at ramp with SW edge up, type 3.
 186       4      1-     Litter at ramp with SW edge up, type 4.
 190       4      1-     Litter at ramp with NW edge up, type 1.
 194       4      1-     Litter at ramp with NW edge up, type 2.
 198       4      1-     Litter at ramp with NW edge up, type 3.
 202       4      1-     Litter at ramp with NW edge up, type 4.
 206       4      1-     Vomit at flat path, type 1.
 210       4      1-     Vomit at flat path, type 2.
 214       4      1-     Vomit at flat path, type 3.
 218       4      1-     Vomit at flat path, type 4.
 222       4      1-     Vomit at ramp with NE edge up, type 1.
 226       4      1-     Vomit at ramp with NE edge up, type 2.
 230       4      1-     Vomit at ramp with NE edge up, type 3.
 234       4      1-     Vomit at ramp with NE edge up, type 4.
 238       4      1-     Vomit at ramp with SE edge up, type 1.
 242       4      1-     Vomit at ramp with SE edge up, type 2.
 246       4      1-     Vomit at ramp with SE edge up, type 3.
 250       4      1-     Vomit at ramp with SE edge up, type 4.
 254       4      1-     Vomit at ramp with SW edge up, type 1.
 258       4      1-     Vomit at ramp with SW edge up, type 2.
 262       4      1-     Vomit at ramp with SW edge up, type 3.
 266       4      1-     Vomit at ramp with SW edge up, type 4.
 270       4      1-     Vomit at ramp with NW edge up, type 1.
 274       4      1-     Vomit at ramp with NW edge up, type 2.
 278       4      1-     Vomit at ramp with NW edge up, type 3.
 282       4      1-     Vomit at ramp with NW edge up, type 4.
 286                     Total length.
======  ======  =======  =================================================

Version history
...............

- 1 (20150106) Initial version.


Platforms
~~~~~~~~~
Platforms put up in the air, to carry the weight of a path.
FreeRCT can read blocks with version 2.

======  ======  =======  =================================================
Offset  Length  Version  Description
======  ======  =======  =================================================
   0       4      1-     Magic string 'PLAT'.
   4       4      1-     Version number of the block.
   8       4      1-     Length of the block excluding magic string,
                         version, and length.
  12       2      1-     Zoom-width of a tile of the surface.
  14       2      1-     Change in Z height (in pixels) when going up or
                         down a tile level.
  16       2      1-     Platform type.
  18       4      1-     Flat platform for north and south view.
  22       4      1-     Flat platform for east and west view.
  26       4      1-     Platform with two legs is raised at the NE edge.
  30       4      1-     Platform with two legs is raised at the SE edge.
  34       4      1-     Platform with two legs is raised at the SW edge.
  38       4      1-     Platform with two legs is raised at the NW edge.
  42       4      2-     Platform with right leg is raised at the NE edge.
  46       4      2-     Platform with right leg is raised at the SE edge.
  50       4      2-     Platform with right leg is raised at the SW edge.
  54       4      2-     Platform with right leg is raised at the NW edge.
  58       4      2-     Platform with left leg is raised at the NE edge.
  62       4      2-     Platform with left leg is raised at the SE edge.
  66       4      2-     Platform with left leg is raised at the SW edge.
  70       4      2-     Platform with left leg is raised at the NW edge.
  74                     Total length.
======  ======  =======  =================================================


Platform type:

- Empty 0, do not use.
- Wood 16.


Version history
...............

- 1 (20110925) Initial version.
- 2 (20121128) Added platforms sprites with one leg, for the steep slopes.

Platform supports
~~~~~~~~~~~~~~~~~
Structures to support platforms, so they don't fall down.
FreeRCT can read blocks with version 1.


======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'SUPP'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       2    Type of support.
  14       2    Width of a tile.
  16       2    Change in Z height (in pixels) when going up or down a tile level.
  18       4    Single height for flat terrain, north and south view.
  22       4    Single height for flat terrain, east and west view.
  26       4    Double height for flat terrain, north and south view.
  30       4    Double height for flat terrain, east and west view.
  34       4    Double height for paths, north and south view.
  38       4    Double height for paths, east and west view.
  42       4    Single height, north leg up.
  46       4    Single height, east leg up.
  50       4    Single height, north, east legs up.
  54       4    Single height, south leg up.
  58       4    Single height, north, south legs up.
  62       4    Single height, east, south legs up.
  66       4    Single height, north, east, south legs up.
  70       4    Single height, west leg up.
  74       4    Single height, west, north legs up.
  78       4    Single height, west, east legs up.
  82       4    Single height, west, north, east legs up.
  86       4    Single height, west, south legs up.
  90       4    Single height, west, north, south legs up.
  94       4    Single height, west, east, south legs up.
  98       4    Double height for steep north slope.
 102       4    Double height for steep east slope.
 106       4    Double height for steep south slope.
 110       4    Double height for steep west slope.
 114            Total length of the sub-block.
======  ======  ==========================================================

Support type:

- Empty 0, do not use.
- Wood 16.

Version history
...............

- 1 (20121207) Initial version.

Roller coaster tracks
~~~~~~~~~~~~~~~~~~~~~
A ``RCST`` block contains all information of a single type of roller coaster.
It currently contains track piece definitions only. FreeRCT supports version 7
of the ``RCST`` block.

======  ======  =======  =============================  ========================================================================
Offset  Length  Version  Field name                     Description
======  ======  =======  =============================  ========================================================================
   0       4      1-                                    Magic string 'RCST'.
   4       4      1-                                    Version number of the block.
   8       4      1-                                    Length of the block excluding magic string, version, and length.
  12       2      1-     coaster_type                   Type of roller coaster.
  14       1      2-     platform_type                  Platform type.
  15       1      5-     max_number_trains              Maximum number of trains at the roller coaster.
  16       1      5-     max_number_cars                Maximum number of cars in a train.
  17       2      6-     reliability_max                Maximum reliability (in range 0..10000).
  19       2      6-     reliability_decrease_daily     Daily reliability decrease (in range 0..10000).
  21       2      6-     reliability_decrease_monthly   Monthly decrease of the maximum reliability (in range 0..10000).
  23       4      3-     texts                          Texts of the coaster.
  27       2      1-     <derived>                      Number of track piece definitions (called 'n').
  29      4*n     1-                                    The track piece definitions (references to ``TRCK``).
29+4*n     ?      7-     internal_name                  Characters of the ride's internal name, nul-terminated.
   ?                                                    Total length of the ``RCST`` block.
======  ======  =======  =============================  ========================================================================

Currently defined coaster types:

- 1 Simple coaster tracks.

Currently define platform types:

- 1 Wood.

For more information regarding the reliability parameters, see the section on `Gentle and thrill rides`_.


Version history
...............

- 1 (20130317) Initial version.
- 2 (20130430) Added type of platform.
- 3 (20130511) Added a TEXT reference.
- 4 (20131117) Moved platform bits from track piece to track voxel.
- 5 (20131227) Added ``number_of_trains`` and ``number_of_cars`` fields.
- 6 (20210227) Added reliability parameters.
- 7 (20220829) Added internal name.

Track pieces
~~~~~~~~~~~~

A track piece definition describes a single piece of track in a ``TRCK`` block.
FreeRCT can read blocks with version 5. Each piece needs
one or more voxels. The first voxel it needs is called the *entry* voxel. The
other voxels have coordinates relative to the entry voxel. The last voxel is
called the *exit* voxel. The *entry* voxel of a track piece is at the *exit*
voxel of its predecessor.

To control which track pieces can connect to each other, both the entry and
the exit have a *connection code*. Two track pieces can be connected only when
the connection code of the exit of the first piece is the same as the
connection code of the entry of the second piece.

While the connection code is just a single number in the RCD file, in the input
it is split in a 'name' and a 'direction' while defining the track pieces.

=======  ======  =======  ==================  ================================================================
Offset   Length  Version  Field name          Description
=======  ======  =======  ==================  ================================================================
   0        4      1-                         Magic string 'TRCK'.
   4        4      1-                         Version number of the block.
   8        4      1-                         Length of the block excluding magic string, version, and length.
  12        1      1-     entry_connection    Entry connection code
  13        1      1-     exit_connection     Exit connection code
  14        1      2-     exit_dx             Relative X position of the exit voxel.
  15        1      2-     exit_dy             Relative Y position of the exit voxel.
  16        1      2-     exit_dz             Relative Z position of the exit voxel.
  17        1      2-     speed               If non-zero, the minimal speed of cars at the track.
  18        2      2-     track_flags         Flags of the track piece (version 2 is 1 byte).
  20        4      2-     cost                Cost of this track piece.
  24        2      1-                         Number of voxels in this track piece (called 'n').
  26      36*n     1-                         Voxel definitions
26+36*n     4      4-     <calculated>        Length of the piece, in 1/256 pixels.
30+36*n     ?      4-     car_xpos            Car x position.
   ?        ?      4-     car_ypos            Car y position.
   ?        ?      4-     car_xpos            Car z position.
   ?        ?      4-     car_pitch           Car pitch (may be empty).
   ?        ?      4-     car_roll            Car roll.
   ?        ?      4-     car_yaw             Car yaw (may be empty).
   ?                                          Total length of the ``TRCK`` block.
=======  ======  =======  ==================  ================================================================

The track flags are defined as follows:

- bit   3    *This track piece may be used for initial placement*.
- bits  4-5  *Direction of initial placement* (if bit 3 is set).
- bits  6-7  *Banking of the piece* (0=no banking, 1=banking to the left, 2=banking to the right).
- bits  8-10 *Level of the slope* (-3=vertical down, -2=steep down, -1=gentle down, 0=level, 1=gentle up,
  2=steep up, 3=vertical up).
- bits 11-13 *Size of the bend* (-3 to +3, negative is to the left, positive is to the right, bigger is a wider bend).

The remaining bits are reserved and should be ``0``.

A voxel definition is

=======  ======  =======  ==================  ================================================================
Offset   Length  Version  Field name          Description
=======  ======  =======  ==================  ================================================================
   0       4       1-     n_back              Reference to the background tracks for north view.
   4       4       2-     e_back              Reference to the background tracks for east view.
   8       4       2-     s_back              Reference to the background tracks for south view.
  12       4       2-     w_back              Reference to the background tracks for west view.
  16       4       2-     n_front             Reference to the front tracks for north view.
  20       4       2-     e_front             Reference to the front tracks for east view.
  24       4       2-     s_front             Reference to the front tracks for south view.
  28       4       2-     w_front             Reference to the front tracks for west view.
  32       1       1-     dx                  Relative X position of the voxel.
  33       1       1-     dy                  Relative Y position of the voxel.
  34       1       1-     dz                  Relative Z position of the voxel.
  35       1       1-     flags               Flags of the voxel (space requirements, platforms).
  36                                          Total length of a voxel definition.
=======  ======  =======  ==================  ================================================================

The flags are defined as follows:

- bit  0: Northern quarter of the voxel is used by the piece.
- bit  1: Eastern quarter of the voxel is used by the piece.
- bit  2: Southern quarter of the voxel is used by the piece.
- bit  3: Western quarter of the voxel is used by the piece.
- bit  4-6: Platform to attach, with direction
  (\ ``0`` = none, ``1`` = ne-to-sw, ``2`` = se-to-nw, ``3`` = sw-to-ne, ``4`` = nw-to-se).

The remaining bits are reserved and should be ``0``.

Car data
........
The ``car_xpos``, ``car_ypos``, and ``car_zpos`` formulas are analyzed to get
the length of the piece.

All car entries (``car_xpos``, ``car_ypos``, ``car_zpos``, ``car_pitch``,
``car_roll``, and ``car_yaw``) can be

- Type 0: Non-existent (only allowed for ``car_pitch`` and ``car_yaw``),
- Type 1: A fixed value (signed, 16 bits)
- Type 2: A sequence of cubic bezier spline curves, mapping distance (in 1/256 pixel) to a value (signed, 16 bit).

An entry starts with the type, followed by its data. Type 0 has no further data,
type 1 has one signed 16 bit value, and type 2 starts with the number of bezier
splines in a single byte, followed by the bezier spline data.

Values of ``car_pitch``, ``car_roll``, and ``car_yaw`` entries are masked with
``0xF`` afterwards to get the needed sprite index.


Bezier spline data

======  ======  ====================================================
Offset  Length  Description
======  ======  ====================================================
   0       4    First distance of this spline in the track piece.
   4       4    Last distance of this spline in the track piece.
   8       2    Signed ``a`` value of the cubic bezier spline.
  10       2    Signed ``b`` value of the cubic bezier spline.
  12       2    Signed ``c`` value of the cubic bezier spline.
  14       2    Signed ``d`` value of the cubic bezier spline.
  16            Total length of the data of a bezier spline.
======  ======  ====================================================


Version history
...............

- 1 (20130317) Initial version.
- 2 (20130430) Entry and exit definitions, speed, flags, and sprites for other viewing directions added.
- 3 (20130622) Extended the ``track_flags`` from 1 byte to 2 bytes to add the track piece properties (banking, slope,
  and bend size).
- 4 (20131117) Moved platform bits from track piece to track voxel.
- 5 (20131218) Added length of the track piece, and ``car_xpos``, ``car_ypos``,
  ``car_zpos``, ``car_pitch``, ``car_roll``, and ``car_yaw`` entries.

Coaster cars
~~~~~~~~~~~~
Sprites for cars on the coaster tracks. Currently at version 3.

==========================  =====================  =======  =================================  ================================================================
Offset                      Length                 Version  Field name                         Description
==========================  =====================  =======  =================================  ================================================================
   0                            4                     1-                                       Magic string 'CARS'.
   4                            4                     1-                                       Version number of the block.
   8                            4                     1-                                       Length of the block excluding magic string, version, and length.
  12                            2                     1-     tile_width                        Zoom-width of a tile.
  14                            2                     1-     z_height                          Change in Z height of the tiles.
  16                            4                     1-     length                            Length of a car (in 1/65,536 unit).
  20                            4                     2-     inter_length                      Length between two cars (in 1/65,536 unit).
  24                            2                     1-     num_passengers                    Number of passengers that can be carried.
  26                            2                     1-     num_entrances                     Number of rows for entering/exiting the car.
  28                          16384                   1-     car_p\ **P**\ r\ **R**\ y\ **Y**  4096 (16 * 16 * 16) sprites with different pitch, roll, and yaw.
 16412                       16384*num_passengers     3-                                       num_passengers sets of 4096 guest overlay sprites each.
16412+16384*num_passengers      4                     3-                                       First recolouring specification.
16416+16384*num_passengers      4                     3-                                       Second recolouring specification.
16420+16384*num_passengers      4                     3-                                       Third recolouring specification.
16424+16384*num_passengers                                                                     Total length of the block.
==========================  =====================  =======  =================================  ================================================================

with

- **P**: Pitch of the car (rotation to go up or down). Values are 0..15 with inclusive upper bound.
- **R**: Roll of the car (rotation around the main (front to back) axis). Values are 0..15 with inclusive upper bound.
- **Y**: Yaw of the car (rotation to go left or right (the vertical axis). Values are 0..15 with inclusive upper bound.

The 16 values should cover the entire 360 rotation angle, that is, a 22.5 degrees rotation each time. ``car_p0r0y0``
should move upright in the direction of the negative X axis (ie NE direction). Increasing pitch goes up (increasing Z),
increasing roll rotates over to the right, and increasing yaw goes left (positive rotation angle, towards the north).
Sprite index is **P** + **R** * 16 + **Y** * 256 .

Version history
...............

- 1 (20131020) Initial version.
- 2 (20140201) Added inter-car length field.
- 3 (20210409) Added recolourings and guests overlays.


Coaster platforms
~~~~~~~~~~~~~~~~~
Sprites for the platforms of a coasters are stored in a ``CSPL`` block. FreeRCT can load version 2 of these blocks.

=======  ======  =======  ===========  ================================================================
Offset   Length  Version  Field name   Description
=======  ======  =======  ===========  ================================================================
   0        4      1-                  Magic string 'CSPL'.
   4        4      1-                  Version number of the block.
   8        4      1-                  Length of the block excluding magic string, version, and length.
  12        2      1-     tile_width   Zoom-width of a tile.
  14        1      1-     type         Type of the platform, see `Roller coaster tracks`_.
  15        4      1-     ne_sw_back   Background platform sprite of the NE to SW direction.
  19        4      1-     ne_sw_front  Foreground platform sprite of the NE to SW direction.
  23        4      2-     se_nw_back   Background platform sprite of the SE to NW direction.
  27        4      2-     se_nw_front  Foreground platform sprite of the SE to NW direction.
  31        4      2-     sw_ne_back   Background platform sprite of the SW to NE direction.
  35        4      2-     sw_ne_front  Foreground platform sprite of the SW to NE direction.
  39        4      1-     nw_se_back   Background platform sprite of the NW to SE direction.
  43        4      1-     nw_se_front  Foreground platform sprite of the NW to SE direction.
  47                                   Total length of the block.
=======  ======  =======  ===========  ================================================================

The direction of a platform is the same as the movement direction of a coaster train.

Version history
...............

- 1 (20131120) Initial version.
- 2 (20131123) Added the missing directions SE to NW, and SW to NE.


GUI
===
GUI sprites, in various forms.

All GUI sprites should use the BEIGE ranges, that is colours 214 to 225
(inclusive).

Generic GUI border sprites
~~~~~~~~~~~~~~~~~~~~~~~~~~
The most common form of a widget is a rectangular shape.
To draw such a shape, nine sprites are needed around the border of the
rectangle.

        +-------------+---------------+--------------+
        | top-left    | top-middle    | top-right    |
        +-------------+---------------+--------------+
        | left        | middle        | right        |
        +-------------+---------------+--------------+
        | bottom-left | bottom-middle | bottom-right |
        +-------------+---------------+--------------+


The 'top-left', 'top-right', 'bottom-left' and 'bottom-right' sprites are used
for the corners of the widget or window. The 'top-middle', 'middle', and
'bottom-middle' should be equally wide, and are used to insert horizontal
space between the left and the right part (with step size equal to the width
of the sprites. The 'left', 'middle', and 'right' do the same, except their
common height is used for vertical resizing.

Except for the 'top-left' sprite any of the sprites can be dropped. If you
leave out 'top-middle', 'middle', or 'bottom-middle', horizontal resizing is
not possible. If you leave out 'left', 'middle', or 'right' vertical resizing
is not possible.
If you leave out 'top-right', the 'top-right', 'right', and 'bottom-right'
sprites are considered not needed. Similarly for the 'bottom-left' sprite.
Supplying the 'top-right' sprite but leaving out 'bottom-right' (and similarly
for 'bottom-left' and 'bottom-right') gives undefined behaviour.

A sprite coverage of the edge has four border width parameters (top, left,
right, and bottom), measured in pixels.
In addition, a horizontal and a vertical
offset needs to be specified relative to the bounding box of the widget
contents.

That leads to the following block. FreeRCT can read these blocks with version 2.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'GBOR'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       2    Widget type.
  14       1    Border width of the top edge.
  15       1    Border width of the left edge.
  16       1    Border width of the right edge.
  17       1    Border width of the bottom edge.
  18       1    Minimal width of the border.
  19       1    Minimal height of the border.
  20       1    Horizontal stepsize of the border.
  21       1    Vertical stepsize of the border.
  22       4    Top-left sprite.
  26       4    Top-middle sprite.
  30       4    Top-right sprite.
  34       4    Left sprite.
  38       4    Middle sprite.
  42       4    Right sprite.
  46       4    Bottom-left sprite.
  50       4    Bottom-middle sprite.
  54       4    Bottom-right sprite.
  58            Total length.
======  ======  ==========================================================

Known widget types:

- 0 Invalid, do not use.
- 1 Empty left side of a tab bar.
- 2 Selected tab (pressed button).
- 3 Unselected tab.
- 4 Empty right side of a tab bar.
- 5 Panel below the tab bar.
- 6 Title bar.
- 7 Button.
- 8 Pressed button.
- 9 Panel.

Version history
...............

- 1 (20111023) Initial version.
- 1 (20111029) Added 'panel' type (version was not incremented).
- 2 (20140921) Removed unused border sprites, added tab-bar types ('Empty left
  side of a tab bar' to 'Panel below the tab bar'), and renumbered the widget
  types.


Check box and radio buttons
~~~~~~~~~~~~~~~~~~~~~~~~~~~
FreeRCT can read blocks with version 1.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'GCHK'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       2    Widget type.
  14       4    Empty.
  18       4    Filled.
  22       4    Empty pressed.
  26       4    Filled pressed.
  30       4    Shaded empty button.
  34       4    Shaded filled button.
  38            Total length.
======  ======  ==========================================================

Known widget types:

- 96 Check box.
- 112 Radio-button.

Version history
...............

- 1 (20111023) Initial version.


Slider-bar elements
~~~~~~~~~~~~~~~~~~~
For slider-bar GUI elements, the following block should be used.
FreeRCT can read blocks with version 1.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'GSLI'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       1    Minimal length of the bar.
  13       1    Stepsize of the bar.
  14       1    Width of the slider button.
  15       2    Widget type.
  17       4    Left sprite.
  21       4    Middle sprite.
  25       4    Right sprite.
  29       4    Slider button.
  33            Total length.
======  ======  ==========================================================

Known slider-bar widget types:

- 128 Horizontal slider bar + button.
- 129 Shaded horizontal slider bar + button.
- 144 Vertical slider bar + button.
- 145 Shaded vertical slider bar + button.

Version history
...............

- 1 (20111023) Initial version.


Scroll-bar elements
~~~~~~~~~~~~~~~~~~~
For scroll-bar GUI elements, the following block should be used.
FreeRCT can read blocks with version 1.

======  ======  ==================  ================================================================
Offset  Length  Field name          Description
======  ======  ==================  ================================================================
   0       4                        Magic string 'GSCL'.
   4       4                        Version number of the block.
   8       4                        Length of the block excluding magic string, version, and length.
  12       1    min_length          Minimal length scrollbar.
  13       1    step_back           Stepsize of background.
  14       1    min_bar_length      Minimal length bar.
  15       1    bar_step            Stepsize of bar.
  16       2    widget_type         Widget type.
  18       4    left_button         Left/up button.
  22       4    right_button        Right/down button.
  26       4    left_pressed        Left/up pressed button.
  30       4    right_pressed       Right/down pressed button.
  34       4    left_bottom         Left/top bar bottom (the background).
  38       4    middle_bottom       Middle bar bottom (the background).
  42       4    right_bottom        Right/down bar bottom (the background).
  46       4    left_top            Left/top bar top.
  50       4    middle_top          Middle bar top.
  54       4    right_top           Right/down bar top.
  58       4    left_top_pressed    Left/top pressed bar top.
  62       4    middle_top_pressed  Middle pressed bar top.
  66       4    right_top_pressed   Right/down pressed bar top.
  70                                Total length.
======  ======  ==================  ================================================================

Known scroll-bar widget types:

- 160 Horizontal scroll bar + button.
- 161 Shaded horizontal scroll bar + button.
- 176 Vertical scroll bar + button.
- 177 Shaded vertical scroll bar + button.

Version history
...............

- 1 (20111023) Initial version.

Gui button sprites
==================
Sprites for use at buttons in the gui.

Gui Sprites
~~~~~~~~~~~
Several elements come with different slopes, and the user needs to select the
right one. Similarly, there are rotation sprites and texts that are displayed
in the gui.

Additionally stores all the strings related to the GUI and language meta information.

FreeRCT can read blocks with version 14.

======  ======  =======  ==================  ================================================================
Offset  Length  Version  Field name          Description
======  ======  =======  ==================  ================================================================
   0       4      1-                         Magic string 'GSLP' (Gui sprites).
   4       4      1-                         Version number of the block.
   8       4      1-                         Length of the block excluding magic string, version, and length.
  12       4      1-     vert_down           Slope going vertically down.
  16       4      1-     steep_down          Slope going steeply down.
  20       4      1-     gentle_down         Slope going gently down.
  24       4      1-     level               Level slope.
  28       4      1-     gentle_up           Slope going gently up.
  32       4      1-     steep_up            Slope going steeply up.
  36       4      1-     vert_up             Slope going vertically up.
  40       4      5-     wide_left           Wide bend to the left.
  44       4      5-     normal_left         Normal bend to the left.
  48       4      5-     tight_left          Tight bend to the left.
  52       4      5-     no_bend             No bends.
  56       4      5-     tight_right         Tight bend to the right.
  60       4      5-     normal_right        Normal bend to the right.
  64       4      5-     wide_right          Wide bend to the right.
  68       4      5-     no_banking          No banking.
  72       4      5-     bank_left           Bank to the left.
  76       4      5-     bank_right          Bank to the right.
  80       4      5-     triangle_right      Arrow triangle to the right.
  84       4      5-     triangle_left       Arrow triangle to the left.
  88       4      5-     triangle_up         Arrow triangle upwards.
  92       4      5-     triangle_bottom     Arrow triangle downwards.
  96       4      7-     has_platform        Button for selecting trackpieces with platforms.
 100       4      7-     no_platform         Button for selecting trackpieces without platforms.
 104       4      7-     has_power           Button for selecting trackpieces with power.
 108       4      7-     no_power            Button for selecting trackpieces without power.
 112       4      6-     disabled            Sprite to overlay over a disabled button.
 116       4      7-     compass_n           Compass displaying viewing in north direction.
 120       4      7-     compass_e           Compass displaying viewing in east direction.
 124       4      7-     compass_s           Compass displaying viewing in south direction.
 128       4      7-     compass_w           Compass displaying viewing in west direction.
 132       4      7-     bulldozer           Bulldozer (destroy) button.
 136       4      7-     sunny               First weather sprite (fully sunny).
 140       4      7-     light_cloud         Second weather sprite (sunny, thin clouds).
 144       4      7-     thick_cloud         Third weather sprite (thick clouds).
 148       4      7-     rain                Fourth weather sprite (raining).
 152       4      8-     thunder             Fifth weather sprite (thunder storm).
 156       4      8-     light_rog_red       Red of a red/orange/green light.
 160       4      8-     light_rog_orange    Orange of a red/orange/green light.
 164       4      8-     light_rog_green     Green of a red/orange/green light.
 168       4      8-     light_rog_none      None of a red/orange/green light.
 172       4      8-     light_rg_red        Red of a red/green light.
 176       4      8-     light_rg_green      Green of a red/green light.
 180       4      8-     light_rg_none       None of a red/green light.
 184       4      2-     pos_2d              Flat rotation positive direction (counter clock wise).
 188       4      2-     neg_2d              Flat rotation negative direction (clock wise).
 192       4      2-     pos_3d              Diametric rotation positive direction (counter clock wise).
 196       4      2-     neg_3d              Diametric rotation negative direction (clock wise).
 200       4      3-     close_button        Close Button.
  --       4      3-3                        Maximise button.
  --       4      3-3                        Minimise button.
 204       4      4-     terraform_dot       Terraform dot.
 208       4      9-     message_goto        Inbox: Go To Location button.
 212       4      9-     message_park        Inbox: Park Management button.
 216       4      9-     message_guest       Inbox: Guest Window button.
 220       4      9-     message_ride        Inbox: Ride Instance Window button.
 224       4      9-     message_ride_type   Inbox: Ride Select GUI button.
 228       4     12-     loadsave_err        Loadsave icon for files with errors.
 232       4     12-     loadsave_warn       Loadsave icon for files with warnings.
 236       4     12-     loadsave_ok         Loadsave icon for files without warnings or errors.
 240       4     10-     toolbar_main        Toolbar: Main menu GUI button.
 244       4     10-     toolbar_speed       Toolbar: Speed menu GUI button.
 248       4     10-     toolbar_path        Toolbar: Path build GUI button.
 252       4     10-     toolbar_ride        Toolbar: Ride Select GUI button.
 256       4     10-     toolbar_fence       Toolbar: Fence build GUI button.
 260       4     10-     toolbar_scenery     Toolbar: Scenery GUI button.
 264       4     10-     toolbar_terrain     Toolbar: Terraform GUI button.
 268       4     10-     toolbar_staff       Toolbar: Staff GUI button.
 272       4     10-     toolbar_inbox       Toolbar: Inbox GUI button.
 276       4     10-     toolbar_finances    Toolbar: Finances GUI button.
 280       4     10-     toolbar_objects     Toolbar: Path objects GUI button.
 284       4     11-     toolbar_view        Toolbar: View menu GUI button.
 288       4     13-     toolbar_park        Toolbar: Park management GUI button.
 292       4     14-     speed_0             0× speed icon.
 296       4     14-     speed_1             1× speed icon.
 300       4     14-     speed_2             2× speed icon.
 304       4     14-     speed_4             4× speed icon.
 308       4     14-     speed_8             8× speed icon.
 312       4      2-     texts               Text of the guis (reference to a TEXT block).
 316                                         Total length.
======  ======  =======  ==================  ================================================================

Version history
...............

- 1 (20120612) Initial version.
- 2 (20120901) Moved GROT data into the block.
- 3 (20121110) Added close, maximise, and minimise buttons.
- 4 (20121202) Added terraform dot, removed maximise and minimise buttons.
- 5 (20130706) Added bends, banking, and triangle arrow Gui sprites.
- 6 (20130809) Added disabled overlay sprite.
- 7 (20131215) Added weather sprites.
- 8 (20140914) Added thunder storm sprite, and red/orange/green and red/green lights.
- 9 (20210316) Added message button sprites.
- 10 (20210429) Added toolbar button sprites.
- 11 (20210918) Added toolbar view menu button sprite.
- 12 (20220717) Added loadsave icon sprites.
- 13 (20220820) Added toolbar park management button sprite.
- 14 (20220912) Added speed icons.


Main menu sprites
~~~~~~~~~~~~~~~~~
Sprites for the FreeRCT main menu and splash screen. FreeRCT can read block version 1.

=========  ======  =======  ========================================================================================
Offset     Length  Version  Description
=========  ======  =======  ========================================================================================
   0        4       1-      Magic string 'MENU'.
   4        4       1-      Version number of the block.
   8        4       1-      Length of the block excluding magic string, version, and length.
  12        4       1-      Duration of the splash screen animation in milliseconds.
  16        4       1-      FreeRCT logo sprite.
  20        4       1-      FreeRCT splashscreen sprite.
  24        4       1-      New Game button sprite.
  28        4       1-      Load Game button sprite.
  32        4       1-      Settings button sprite.
  36        4       1-      Quit button sprite.
  40                        Total length.
=========  ======  =======  ========================================================================================

Version history
...............

- 1 (20210401) Initial version.


Persons
=======
Persons are an important concept in the game. Their properties are defined in
the game blocks below.
FreeRCT can read blocks with version 1 or 2.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'PRSG' (Person Graphics).
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       1    Number of person graphics in this block (called 'n').
  13     n*13   Graphics definitions of person types in this block.
   ?            Total length.
======  ======  ==========================================================

The person graphics of a person type is a set of colour range
recolourings.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       1    Person type being defined.
   1       4    First recolouring.
   5       4    Second recolouring.
   9       4    Third recolouring.
  13            Total length.
======  ======  ==========================================================

A person type defines the kind of persons:

============  =====  =======  ============================================
Name          Value  Version  Description
============  =====  =======  ============================================
Any             0      1-     Any kind of person (persons are not shown).
Pillar          8      1-1    Guests from the Pillar planet (testing).
Guest           8      2-     Guests.
Earth          16      1-1    Earth-bound persons.
Handyman       17      2-     Handymen.
Mechanic       18      2-     Mechanics.
Guard          19      2-     Security guards.
Entertainer    20      2-     Entertainers.
============  =====  =======  ============================================

The *any* kind is used as fall back.

Recolouring definition
~~~~~~~~~~~~~~~~~~~~~~
The program has 18 colour ranges (0 to 17). A recolouring is a mapping of a
single range to a set of allowed destination ranges, encoded in 32 bit. Bits
24-31 state the single range (where a value other than 0..17 denotes an unused
recolouring), Each bit `i` in the range of bits 0..17 denotes whether range `i`
is allowed as replacement.


Version history
...............

- 1 (20120708) Initial version.
- 2 (20141230) Renamed type 'Pillar' to 'Guest', removed type 'Earth', and
  added staff types (Handyman, Mechanic, Guard, Entertainer).


Animation
=========
Animations have two layers. The conceptual definition is in an 'ANIM'
block. This definition contains the number of frames the timing, and the
change in x and/or y position. These changes are in the internal voxel
coordinate system (256 units to get from one side to the opposite side).

The sprites associated with an animation (at a tile width) are in 'ANSP'
blocks. The latter get erased when the former is defined.
Since the 'ANIM' sequence has to be useful for the largest tile width, for
smaller tile sizes, an animation may contain more frames than really needed.
Also, some changes in x or y may not be visible as they are in the sub-pixel
range at the smaller tile size. The expected (and allowed) solution can be to
display the same sprite in more frames.


Animation sequences
~~~~~~~~~~~~~~~~~~~

Animation sequences (without the sprites) are defined using the 'ANIM' block.
FreeRCT can read blocks with version 4.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'ANIM'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       1    Person type.
  13       2    Animation type.
  15       2    Frame count (called 'f').
  17      f*6   Data of all frames.
   ?            Variable length.
======  ======  ==========================================================

The animation type defines what the animation really shows. Currently, the
following animations exist:

==  =====================  ======================================================  =============  ============  ============
ID  Version                Description                                             May be looped  ANIM Version  ANSP Version
==  =====================  ======================================================  =============  ============  ============
 1  1-                     Walk in north-east direction.                               yes             1-            1-
 2  1-                     Walk in south-east direction.                               yes             1-            1-
 3  1-                     Walk in south-west direction.                               yes             1-            1-
 4  1-                     Walk in north-west direction.                               yes             1-            1-
 5  3- (ANIM) / 2- (ANSP)  Mechanic repairing a ride,        north-east view.           no             3-            2-
 6  3- (ANIM) / 2- (ANSP)  Mechanic repairing a ride,        south-east view.           no             3-            2-
 7  3- (ANIM) / 2- (ANSP)  Mechanic repairing a ride,        south-west view.           no             3-            2-
 8  3- (ANIM) / 2- (ANSP)  Mechanic repairing a ride,        north-west view.           no             3-            2-
 9  3- (ANIM) / 2- (ANSP)  Handyman watering the flowerbeds, north-east view.           no             3-            2-
10  3- (ANIM) / 2- (ANSP)  Handyman watering the flowerbeds, south-east view.           no             3-            2-
11  3- (ANIM) / 2- (ANSP)  Handyman watering the flowerbeds, south-west view.           no             3-            2-
12  3- (ANIM) / 2- (ANSP)  Handyman watering the flowerbeds, north-west view.           no             3-            2-
13  3- (ANIM) / 2- (ANSP)  Handyman sweeping a path,         north-east view.           no             3-            2-
14  3- (ANIM) / 2- (ANSP)  Handyman sweeping a path,         south-east view.           no             3-            2-
15  3- (ANIM) / 2- (ANSP)  Handyman sweeping a path,         south-west view.           no             3-            2-
16  3- (ANIM) / 2- (ANSP)  Handyman sweeping a path,         north-west view.           no             3-            2-
17  3- (ANIM) / 2- (ANSP)  Handyman emptying a bin,          north-east view.           no             3-            2-
18  3- (ANIM) / 2- (ANSP)  Handyman emptying a bin,          south-east view.           no             3-            2-
19  3- (ANIM) / 2- (ANSP)  Handyman emptying a bin,          south-west view.           no             3-            2-
20  3- (ANIM) / 2- (ANSP)  Handyman emptying a bin,          north-west view.           no             3-            2-
21  3- (ANIM) / 2- (ANSP)  Guest sitting on a bench,         north-east view.           no             4-            3-
22  3- (ANIM) / 2- (ANSP)  Guest sitting on a bench,         south-east view.           no             4-            3-
23  3- (ANIM) / 2- (ANSP)  Guest sitting on a bench,         south-west view.           no             4-            3-
24  3- (ANIM) / 2- (ANSP)  Guest sitting on a bench,         north-west view.           no             4-            3-
==  =====================  ======================================================  =============  ============  ============

Finally the actual frames of the animation are listed, prefixed by how
many frames to expect. The animation type decides whether or not an animation
can be repeated by looping.
A single frame consists of the following data.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       2    Duration of the frame in milli seconds.
   2       2    (signed) X position change after displaying the frame.
   4       2    (signed) Y position change after displaying the frame.
   6            Total length.
======  ======  ==========================================================

Position changes are in the 256 unit inside-voxel coordinate system.The z
position is derived from the world data.


Sprites of an animation sequence for a given tile width are then in an 'ANSP'
block, defined below. The frame count should match with the count in the
'ANIM' block.

Version history
...............

- 1 (20120418) Initial version.
- 2 (20120527) Removed tile width from 'ANIM' and sprite and frame number from the frame data.
  The sprite moved to the 'ANSP' block.
- 3 (20210425) Added more animation types.
- 4 (20210429) Added more animation types.

Animation sprites
~~~~~~~~~~~~~~~~~
FreeRCT can read blocks with version 3.

======  ======  ==========================================================
Offset  Length  Description
======  ======  ==========================================================
   0       4    Magic string 'ANSP'.
   4       4    Version number of the block.
   8       4    Length of the block excluding magic string, version, and
                length.
  12       2    Zoom-width of a tile.
  14       1    Person type.
  15       2    Animation type.
  17       2    Frame count (called 'f').
  19      f*4   Sprite for each frame.
   ?            Variable length.
======  ======  ==========================================================

Version history
...............

- 1 (20120527) Initial version.
- 2 (20210425) Added more animation types.
- 3 (20210429) Added more animation types.


Obsolete blocks
===============

The following blocks existed once, but are not needed any more

==== =====================  =====================================================================
Name Version                Description
==== =====================  =====================================================================
8PAL (20110915)-(20110925)  8bpp palette data (data is hard-coded in the program).
SPRT (20110915)-(20120623)  X and Y offset of a sprite (data has been moved to the 8PXL block).
GROT (20120612)-(20120901)  Rotation GUI sprites (data has been moved to the GSLP block)
==== =====================  =====================================================================

.. vim: set spell
